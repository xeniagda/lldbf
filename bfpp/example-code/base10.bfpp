#include divmod.bfpp

// Assumes tmp1 == tmp2 == div == mod == 0
// Sets n = 0
def print10(n, divider, div, mod, tmp1, tmp2) at n {
    // Take n divmod 100
    run add100(divider, tmp1)

    run divmod(n, divider, div, mod, tmp1, tmp2)

    // If div != 0, print div
    to div [
        // Print div = n / 100
        run add48(div, tmp1)
        to div . [-]
    ]

    // Take mod divmod 10
    run dec90(divider, tmp1)

    // Reuse n as the result for the mod
    run divmod(mod, divider, div, n, tmp1, tmp2)

    // If div != 0, print div
    // BUG: Check that the previous div was not 0!
    to div [
        // Print div = n % 100 / 10
        run add48(div, tmp1)
        to div . [-]
    ]
    run add48(n, tmp1)
    to n . [-]
}

declare (n, tmp1, tmp2, tmp3, tmp4, tmp5) at n
run add154(n, tmp1)

run print10(n, tmp1, tmp2, tmp3, tmp4, tmp5)
